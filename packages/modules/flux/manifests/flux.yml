---
# The service account, cluster roles, and cluster role binding are
# only needed for Kubernetes with role-based access control (RBAC).
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: flux
  name: flux
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: flux
  name: flux
rules:
  - apiGroups: ['*']
    resources: ['*']
    verbs: ['*']
  - nonResourceURLs: ['*']
    verbs: ['*']
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: flux
  name: flux
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flux
subjects:
  - kind: ServiceAccount
    name: flux
    namespace: kube-system
---
apiVersion: v1
kind: Secret
metadata:
  name: flux-git-deploy
  namespace: kube-system
  labels:
    app: flux
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flux
  namespace: kube-system
  labels:
    app: flux
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flux
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: flux
      annotations:
        iam.amazonaws.com/role: flux-dev
    spec:
      serviceAccount: flux
      volumes:
        - name: git-key
          secret:
            secretName: flux-git-deploy
            defaultMode: 0400    # when mounted read-only not able to chmod

        # This is a tmpfs used for generating SSH keys. In K8s >= 1.10,
        # mounted secrets are read-only, so we need a separate volume we
        # can write to.
        - name: git-keygen
          emptyDir:
            medium: Memory

        # The following volume is for using a customised known_hosts
        # file file, which you will need to do if you host your own git
        # repo rather than using github or the like. You'll also need to
        # mount it into the container, below.
        # - name: ssh-config
        #   configMap:
        #     name: flux-ssh-config

      containers:
        - name: flux
          # There are no ":latest" images for flux. Find the most recent
          # release or image version at https://quay.io/weaveworks/flux
          # and replace the tag here.
          image: quay.io/weaveworks/flux:1.10.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3030    # informational
          volumeMounts:
            - name: git-key
              mountPath: /etc/fluxd/ssh    # to match location given in image's /etc/ssh/config
              readOnly: true    # this will be the case perforce in K8s >=1.10
            - name: git-keygen
              mountPath: /var/fluxd/keygen    # to match location given in image's /etc/ssh/config

            # Include this if you need to mount a customised known_hosts
            # file; you'll also need the volume declared above.
            # - name: ssh-config
            #   mountPath: /root/.ssh

          args:

            # if you deployed memcached in a different namespace to flux,
            # or with a different service name, you can supply these
            # following two arguments to tell fluxd how to connect to it.
            #- --memcached-hostname=memcached.flux.svc.cluster.local
            #- --memcached-service=memcached

            # this must be supplied, and be in the tmpfs (emptyDir)
            # mounted above, for K8s >= 1.10
            - --ssh-keygen-dir=/var/fluxd/keygen

            # replace or remove the following URL
            - --git-url=git@github.com:subnova/k8s-gitops-system
            - --git-branch=master

            # added --registry-poll-interval and --sync-interval (which weren't set originally)
            # reduced --registry-rps from 200 to 10
            # stretched registry poll interval to 10h as it's (a) broken and (b) not needed
            - --git-poll-interval=1m
            - --sync-interval=2m
            - --registry-poll-interval=20m
            - --registry-rps=10

            # include these next two to connect to an "upstream" service
            # (e.g., Weave Cloud). The token is particular to the service.
            # - --connect=wss://cloud.weave.works/api/flux
            # - --token=abc123abc123abc123abc123

          resources:
            requests:
              cpu: "100m"
              memory: "1Gi"
            limits:
              cpu: "250m"
              memory: "1.25Gi"
---
# You can optionally deploy memcache, for the Flux daemon to cache
# container image metadata.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memcached
  namespace: kube-system
  labels:
    app: memcached
spec:
  replicas: 1
  selector:
    matchLabels:
      app: memcached
  template:
    metadata:
      labels:
        app: memcached
    spec:
      containers:
        - name: memcached
          image: memcached:1.4.25
          imagePullPolicy: IfNotPresent
          args:
            - -m 64    # Maximum memory to use, in megabytes. 64MB is default.
            - -p 11211    # Default port, but being explicit is nice.
            - -v
          ports:
            - name: clients
              containerPort: 11211
          resources:
            requests:
              cpu: "100m"
              memory: "50Mi"
            limits:
              cpu: "250m"
              memory: "100Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: memcached
  namespace: kube-system
  labels:
    app: memcached
spec:
  # The memcache client uses DNS to get a list of memcached servers and then
  # uses a consistent hash of the key to determine which server to pick.
  clusterIP: None
  ports:
    - name: memcached
      port: 11211
  selector:
    app: memcached
